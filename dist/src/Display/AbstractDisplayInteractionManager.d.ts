import { IDisplayInteractionListener } from "../Common/Interfaces/IDisplayInteractionListener";
export declare abstract class AbstractDisplayInteractionManager {
    protected listeners: IDisplayInteractionListener[];
    private zoomGestureActive;
    protected touchCount: number;
    protected touchActive: boolean;
    protected touchMoving: boolean;
    private lastRelPosX;
    private lastRelPosY;
    protected lastPixelX: number;
    protected lastPixelY: number;
    protected displayWidth: number;
    protected displayHeight: number;
    protected displayDpi: number;
    protected maxNumerOfFingers: number;
    protected movementThreshInch: number;
    protected interactionWasZoomGesture: boolean;
    constructor();
    addListener(listener: IDisplayInteractionListener): void;
    get ZoomGestureActive(): boolean;
    get WasZoomGestureActive(): boolean;
    displaySizeChanged(displayWidthInPixel: number, displayHeightInPixel: number): void;
    Dispose(): void;
    Initialize(): void;
    get DisplayDpi(): number;
    get TouchActive(): boolean;
    get TouchMoving(): boolean;
    protected abstract dispose(): void;
    protected abstract initialize(): void;
    protected touchDown(positionInPixelX: number, positionInPixelY: number, leftMouseButton: boolean): void;
    protected move(positionInPixelX: number, positionInPixelY: number): void;
    protected zoomGestureStarted(): void;
    protected zoomGestureCompleted(): void;
    protected zoomGestureMove(scale: number): void;
    protected touchUp(positionInPixelX: number, positionInPixelY: number): void;
    protected click(positionInPixelX: number, positionInPixelY: number): void;
    protected doubleClick(positionInPixelX: number, positionInPixelY: number): void;
    protected mouseDidMove(oldPosX: number, newPosX: number, oldPosY: number, newPosY: number): boolean;
}
