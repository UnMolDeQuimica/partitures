import { MidiInstrument } from "../MusicalScore/VoiceData/Instructions/ClefInstruction";
import { ISettableInstrument } from "../Common/Interfaces/ISettableInstrument";
export declare class MetronomeInstrument implements ISettableInstrument {
    constructor(id: number, name: string, visible: boolean, audible: boolean, volume: number, midiInstrumentId: MidiInstrument);
    Following: boolean;
    PitchMonitor: boolean;
    Highlight: boolean;
    Volume: number;
    private preCountVolume;
    get PreCountVolume(): number;
    set PreCountVolume(value: number);
    MidiInstrumentId: MidiInstrument;
    get Audible(): boolean;
    set Audible(value: boolean);
    Solo: boolean;
    get Visible(): boolean;
    set Visible(value: boolean);
    get Mute(): boolean;
    set Mute(value: boolean);
    get Name(): string;
    setVoiceAudible(voiceId: number, audible: boolean): void;
    setStaffAudible(staffId: number, audible: boolean): void;
    setVoiceFollowing(voiceId: number, follow: boolean): void;
    setStaffFollow(staffId: number, follow: boolean): void;
    setVoicePitchMonitor(voiceId: number, pitchMonitor: boolean): void;
    setStaffPitchMonitor(staffId: number, pitchMonitor: boolean): void;
    InstrumentParameterChanged: any;
    setInstrumentParameter(parameter: any, value: Object): void;
    private id;
    private name;
    private visible;
    private audible;
    get Id(): number;
}
